{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/reactjs/coding-practices/enhancementOfNxtTrendzPayment/src/components/Payments/index.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport CartContext from '../../context/CartContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst paymentOptionsList = [{\n  id: 'CARD',\n  displayText: 'Card',\n  isDisabled: true\n}, {\n  id: 'NET BANKING',\n  displayText: 'Net Banking',\n  isDisabled: true\n}, {\n  id: 'UPI',\n  displayText: 'UPI',\n  isDisabled: true\n}, {\n  id: 'WALLET',\n  displayText: 'Wallet',\n  isDisabled: true\n}, {\n  id: 'CASH ON DELIVERY',\n  displayText: 'Cash on Delivery',\n  isDisabled: false\n}];\nconst Payments = () => {\n  _s();\n  const {\n    cartList\n  } = useContext(CartContext);\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [isOrderPlaced, setIsOrderPlaced] = useState(false);\n  const updatePaymentMethod = event => {\n    const {\n      id\n    } = event.target;\n    setPaymentMethod(id);\n  };\n  const onPlaceOrder = () => setIsOrderPlaced(true);\n  const getTotalPrice = () => cartList.reduce((acc, item) => acc + item.quantity * item.price, 0);\n  const renderPaymentMethodsInput = () => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"payment-method-inputs\",\n    children: paymentOptionsList.map(eachMethod => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"payment-method-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"payment-method-input\",\n        id: eachMethod.id,\n        type: \"radio\",\n        name: \"paymentMethod\",\n        disabled: eachMethod.isDisabled,\n        onChange: updatePaymentMethod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `payment-method-label ${eachMethod.isDisabled ? 'disabled-label' : ''}`,\n        htmlFor: eachMethod.id,\n        children: eachMethod.displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, eachMethod.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payments-container\",\n    children: isOrderPlaced ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"Your order has been placed successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"payments-heading\",\n        children: \"Payments Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"payments-sub-heading\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), renderPaymentMethodsInput(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"payments-sub-heading\",\n          children: \"Order details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", cartList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: RS \", getTotalPrice(), \"/-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: paymentMethod === '',\n        type: \"button\",\n        className: \"confirm-order-button\",\n        onClick: onPlaceOrder,\n        children: \"Confirm Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Payments, \"uphRHs/BYaXusiMi5O6CF1IY9q8=\");\n_c = Payments;\nexport default Payments;\nvar _c;\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"names":["useContext","useState","CartContext","jsxDEV","_jsxDEV","Fragment","_Fragment","paymentOptionsList","id","displayText","isDisabled","Payments","_s","cartList","paymentMethod","setPaymentMethod","isOrderPlaced","setIsOrderPlaced","updatePaymentMethod","event","target","onPlaceOrder","getTotalPrice","reduce","acc","item","quantity","price","renderPaymentMethodsInput","className","children","map","eachMethod","type","name","disabled","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","onClick","_c","$RefreshReg$"],"sources":["/home/nxtwave/reactjs/coding-practices/enhancementOfNxtTrendzPayment/src/components/Payments/index.js"],"sourcesContent":["import {useContext, useState} from 'react'\n\nimport CartContext from '../../context/CartContext'\n\nimport './index.css'\n\nconst paymentOptionsList = [\n  {\n    id: 'CARD',\n    displayText: 'Card',\n    isDisabled: true,\n  },\n  {\n    id: 'NET BANKING',\n    displayText: 'Net Banking',\n    isDisabled: true,\n  },\n  {\n    id: 'UPI',\n    displayText: 'UPI',\n    isDisabled: true,\n  },\n  {\n    id: 'WALLET',\n    displayText: 'Wallet',\n    isDisabled: true,\n  },\n  {\n    id: 'CASH ON DELIVERY',\n    displayText: 'Cash on Delivery',\n    isDisabled: false,\n  },\n]\n\nconst Payments = () => {\n  const {cartList} = useContext(CartContext)\n\n  const [paymentMethod, setPaymentMethod] = useState('')\n  const [isOrderPlaced, setIsOrderPlaced] = useState(false)\n\n  const updatePaymentMethod = event => {\n    const {id} = event.target\n    setPaymentMethod(id)\n  }\n\n  const onPlaceOrder = () => setIsOrderPlaced(true)\n\n  const getTotalPrice = () =>\n    cartList.reduce((acc, item) => acc + item.quantity * item.price, 0)\n\n  const renderPaymentMethodsInput = () => (\n    <ul className=\"payment-method-inputs\">\n      {paymentOptionsList.map(eachMethod => (\n        <li key={eachMethod.id} className=\"payment-method-input-container\">\n          <input\n            className=\"payment-method-input\"\n            id={eachMethod.id}\n            type=\"radio\"\n            name=\"paymentMethod\"\n            disabled={eachMethod.isDisabled}\n            onChange={updatePaymentMethod}\n          />\n          <label\n            className={`payment-method-label ${\n              eachMethod.isDisabled ? 'disabled-label' : ''\n            }`}\n            htmlFor={eachMethod.id}\n          >\n            {eachMethod.displayText}\n          </label>\n        </li>\n      ))}\n    </ul>\n  )\n\n  return (\n    <div className=\"payments-container\">\n      {isOrderPlaced ? (\n        <p className=\"success-message\">\n          Your order has been placed successfully\n        </p>\n      ) : (\n        <>\n          <h1 className=\"payments-heading\">Payments Details</h1>\n          <p className=\"payments-sub-heading\">Payment Method</p>\n          {renderPaymentMethodsInput()}\n          <div className=\"order-details\">\n            <p className=\"payments-sub-heading\">Order details:</p>\n            <p>Quantity: {cartList.length}</p>\n            <p>Total Price: RS {getTotalPrice()}/-</p>\n          </div>\n          <button\n            disabled={paymentMethod === ''}\n            type=\"button\"\n            className=\"confirm-order-button\"\n            onClick={onPlaceOrder}\n          >\n            Confirm Order\n          </button>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Payments\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}